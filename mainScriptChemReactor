clearvars;
% erstellen einer globalen Cell-Array-Structure
global r_const
r_const = struct('k',{1, 1.5});

% ersetllen des Input Fensters für die Anfangskonzentrationen
     %c0 = inputdlg('Gib die Konzentrationen ein (cA, cB, ...) ',...
                   %    'Konzentrationen', [1 50]);

% Umwandlung in numerisches Array
      %c0 = str2num (c0 {1}); % {1} muss da sein weil er einen string erwartet und es bei uns die eine cell ist
% -> deswegen greift er dann mit dem 1er nur auf den Inhalt der ertsen Zeile der Cell zu
c0 = [1, 1, 0, 0]; %%konzentrationen in mol

%if isempty(c0) % um zu Kontrollieren ob es eine gültige Eingabe gab
    % -> str2num gibt leeren Vektor wenn die Umwandlung nicht geht
    %msgbox('Ungültige Eingabe für Konzentrationen!');
%end

tspan = [0 10];

 %Zeitspanne für ode45 Funktion

 [t, c] = ode45(@rxn, tspan, c0);

 %Bestimmen der Integrationsdauer
 idx99_5= find(c(:,2) <=0.005, 1);
 t99_5 = t(idx99_5);

 fprintf('Zeit bis 99.5%% Umsetzung von Edukten: %.2f s\n', t99_5);

% Erneut simulieren mit angepasstem tspan
[t, c] = ode45(@rxn, [0 t99_5], c0);

 % Plot der Konzentrationsverläufe
figure;
plot(t, c(:,1), '-r', 'DisplayName', 'c_A');
hold on;
plot(t, c(:,2), '-g', 'DisplayName', 'c_B');
plot(t, c(:,3), '-b', 'DisplayName', 'c_C');
plot(t, c(:,4), '-k', 'DisplayName', 'c_D');
xlabel('Zeit [s]');
ylabel('Konzentration [mol/m^3]');
title('Zeitlicher Verlauf der Konzentrationen');
legend('Location', 'northeast');
grid on;

% Initialwerte
c0 = [1; 1; 0; 0];      % Beispiel: A, B, C, D
t99_5 = 10;               % Endzeitpunkt der Simulation

% Header für Cell Array
reaction_data = {
    'A_start_conc', 'B_start_conc', 'C_start_conc', 'D_start_conc',...
    'A_final_conc', 'B_final_conc', 'C_final_conc', 'D_final_conc',...
    'max_C', 'max_D', 'min_A', 'min_B', 'selectivity_C'};

% Zeilenweise Ergebnisse füllen
row = 2;  % Start ab zweiter Zeile (erste ist Header)

for pct = 0:10:80
    % Anfangskonzentration variieren
    c0_var = c0;
    c0_var(1) = c0_var(1) * (1 + pct/100);

    % Reaktion berechnen
    [t_var, c_var] = ode45(@rxn, [0 t99_5], c0_var);

    % Selektivität berechnen
    SC = c_var(end,3) / (c_var(end,3) + c_var(end,4));

    % Werte in Cell Array speichern
    reaction_data{row,1}  = c0_var(1);
    reaction_data{row,2}  = c0_var(2);
    reaction_data{row,3}  = c0_var(3);
    reaction_data{row,4}  = c0_var(4);
    reaction_data{row,5}  = c_var(end,1);
    reaction_data{row,6}  = c_var(end,2);
    reaction_data{row,7}  = c_var(end,3);
    reaction_data{row,8}  = c_var(end,4);
    reaction_data{row,9}  = max(c_var(:,3));
    reaction_data{row,10} = max(c_var(:,4));
    reaction_data{row,11} = min(c_var(:,1));
    reaction_data{row,12} = min(c_var(:,2));
    reaction_data{row,13} = SC;

    row = row + 1;
end

% In Excel schreiben
writecell(reaction_data, 'reaction_results.xlsx');
